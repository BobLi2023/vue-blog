import java.util.*;
/**
 * Definition for an interval.
 * public class Interval {
 *     int start;
 *     int end;
 *     Interval() { start = 0; end = 0; }
 *     Interval(int s, int e) { start = s; end = e; }
 * }
 */
public class Solution {
    public ArrayList<Interval> merge(ArrayList<Interval> intervals) {
        ArrayList<Interval> result = new ArrayList<>();
        if(intervals.size() == 0) {
            return result;
        }
        Collections.sort(intervals, new Comparator<Interval>(){
            public int compare(Interval o1, Interval o2) {
                if(o1.start != o2.start) {
                    return o1.start - o2.start;
                }
                else {
                    return o1.end - o2.end;
                }
            }
        });
        result.add(intervals.get(0));
        int count = 0;
        for(int i = 0; i < intervals.size(); i++) {
            Interval o1 = intervals.get(i);
            Interval origin = result.get(count);
            if(o1.start > origin.end) {
                result.add(o1);
                count++;
            }
            else {
                result.remove(count);
                Interval mergeInterval = new Interval(origin.start,o1.end);
                if(o1.end < origin.end) {
                    mergeInterval.end = origin.end;
                }
                result.add(mergeInterval);
            }
        }
        return result;
    }
}