import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        int[]numbers = new int[Integer.parseInt(br.readLine())];
        for(int i = 0; i < numbers.length; i++) {
            numbers[i] = Integer.parseInt(br.readLine());
        }
        quickSort(numbers,0,numbers.length-1);
        for(int i = 0; i < numbers.length; i++) {
            if(i==0||numbers[i]!=numbers[i-1]) {
                System.out.println(numbers[i]);
            }
        }
    }
    public static void quickSort(int[] numbers,int left,int right) {
        if (null == numbers||numbers.length<1||numbers.length>1000) {
            throw new IllegalArgumentException("数组不符合要求");
        }
        for(int i = 0; i < numbers.length; i++) {
            if (numbers[i]<1||numbers[i]>500) {
                throw new IllegalArgumentException("数组元素不符合要求");
            }
        }
        final int LEFT = left;
        final int RIGHT = right;
        String direction = "right";
        while(left != right) {
            if(numbers[right]<numbers[left]) {
                int temp = numbers[left];
                numbers[left] = numbers[right];
                numbers[right] = temp;
                if(direction == "right") {
                    direction = "left";
                }
                else if(direction == "left") {
                    direction = "right";
                }
            }
            else {
                if(direction == "right") {
                    right--;
                }
                else if(direction == "left") {
                    left++;
                }
            }
        }
        final int CENTER = (left+right)/2;
        if(LEFT<CENTER-1) {
            quickSort(numbers,LEFT,CENTER-1);
        }
        if(CENTER+1<RIGHT) {
            quickSort(numbers,CENTER+1,RIGHT);
        }
    }
}