/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> traversalResult = new ArrayList<List<Integer>>();
        Queue<TreeNode> traversalingNode = new LinkedList<>();
        if(root == null) {
            return traversalResult;
        }
        traversalingNode.offer(root);
        while(!traversalingNode.isEmpty()) {
            List<Integer> levelNode = new ArrayList<>();
            int currentSize = traversalingNode.size();
            for(int i = 0; i < currentSize; i++) {
                TreeNode node = traversalingNode.poll();
                levelNode.add(node.val);
                if(node.left != null) {
                    traversalingNode.offer(node.left);
                }
                if(node.right != null) {
                    traversalingNode.offer(node.right);
                }
            }
            traversalResult.add(levelNode);
        }
        return traversalResult;
    }
}