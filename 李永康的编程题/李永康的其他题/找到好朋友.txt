public class Solution {
    public static void main(String[] args) throws IOException {
        int[] result = findGoodFriend();
        for (int i : result) {
            System.out.print(i+" ");
        }
    }

    /**
     * 找到好朋友
     *
     * @return {@link int[]}
     *
     * N 个小朋友站成一队，第 i 个小朋友的身高为 height[i]，第 i 个小朋友可以
     * 看到第一个比自己身高更高的小朋友 j
     * 那么 j 是 i 的好朋友 (要求：j>i) 。
     * 请重新生成一个列表，对应位置的输出是每个小朋友的好朋友的位置。如果没有
     * 看到好朋友，请在该位置用 0 代替。
     * 第一行输入 N，N 表示有 N 个小朋友
     * 第二行输入 N 个小朋友的身高 height[i]，都是整数
     * 输出 N 个小朋友的好朋友的位置
     * 8
     * 123 124 125 121 119 122 126 123
     * 1 2 6 5 5 6 0 0
     * 123 的好朋友是 1 位置上的 124 ，124 的好朋友是 2 位置上的 125，125 的好朋
     * 友是 6 位置上的 126，依此类推
     *
     */
    public static int[] findGoodFriend() {
        Scanner scanner = new Scanner(System.in);
        int length = scanner.nextInt();
        int[] children = new int[length];
        for (int i=0; i<children.length;i++) {
            children[i] = scanner.nextInt();
        }
        for (int i=0; i<children.length;i++) {
            boolean found = false;
            for (int j=i+1; j<children.length;j++) {
                if (children[j] > children[i]) {
                    children[i] = j;
                    found = true;
                    break;
                }
            }
            if (found == false) {
                children[i] = 0;
            }
        }
        return children;
    }
}